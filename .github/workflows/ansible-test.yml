name: CI
on:
  # Run EOL CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches:
      - main
      - master
  pull_request:

jobs:

###
# Sanity tests (REQUIRED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity:
    name: Sanity (â’¶${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - ''
        python:
          - ''
        exclude:
          - ansible: ''
        include:
          - ansible: '2.9'
            python: '2.7'
          - ansible: '2.10'
            python: '2.7'
          - ansible: '2.11'
            python: '2.7'
          - ansible: '2.11'
            python: '3.6'
          - ansible: '2.11'
            python: '3.9'
          - ansible: '2.12'
            python: '3.8'
          - ansible: '2.12'
            python: '3.10'
          - ansible: '2.13'
            python: '3.8'
          - ansible: '2.13'
            python: '3.10'
          - ansible: '2.14'
            python: '3.9'
          - ansible: '2.14'
            python: '3.11'
          - ansible: '2.15'
            python: '3.9'
          - ansible: '2.15'
            python: '3.11'
    # Ansible-test on various stable branches does not yet work well with cgroups v2.
    # Since ubuntu-latest now uses Ubuntu 22.04, we need to fall back to the ubuntu-20.04
    # image for these stable branches. The list of branches where this is necessary will
    # shrink over time, check out https://github.com/ansible-collections/news-for-maintainers/issues/28
    # for the latest list.
    runs-on: >-
      ${{ (contains(fromJson('["2.9", "2.10", "2.11"]'), matrix.ansible) || contains(fromJson('["2.7", "3.5", "3.6"]'), matrix.python)) && 'ubuntu-20.04' || 'ubuntu-latest' }}
    steps:

      # ansible-test requires the collection to be in a directory in the form
      # .../ansible_collections/NAMESPACE/COLLECTION_NAME/

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: ansible_collections/redhat/insights

      - name: Check out the branch
        run: |
          # Create a branch for the current HEAD, which happens to be a merge commit
          git -C ansible_collections/redhat/insights checkout -b 'pull-request-${{ github.event.pull_request.number }}'

          # Name the target branch
          git -C ansible_collections/redhat/insights branch '${{
            github.event.pull_request.base.ref
          }}' --track 'origin/${{
            github.event.pull_request.base.ref
          }}'

          # Show branch information
          git -C ansible_collections/redhat/insights branch -vv
        if: github.event_name == 'pull_request'

      - name: Get git version
        id: git-version
        run: |
          export version=$(git -C ansible_collections/redhat/insights describe --tags | grep -Po '\d+\.\d+\.\d+')
          echo "git_version=$version" >> $GITHUB_OUTPUT

      - name: Generate galaxy.yml
        uses: cuchi/jinja2-action@v1.2.1
        with:
          template: ansible_collections/redhat/insights/galaxy.yml.j2
          output_file: ansible_collections/redhat/insights/galaxy.yml
          strict: true
          variables: |
            collection_name=insights
            collection_namespace=${{ github.repository_owner }}
            collection_repo=https://github.com/${{ github.repository }}
            collection_version=${{ steps.git-version.outputs.git_version }}

      - name: Run sanity tests
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-github-repository-slug: ${{ contains(fromJson('["2.9", "2.10", "2.11"]'), matrix.ansible) && 'felixfontein/ansible' || 'ansible/ansible' }}
          ansible-core-version: stable-${{ matrix.ansible }}
          collection-src-directory: ${{ github.workspace }}/ansible_collections/redhat/insights
          coverage: ${{ github.event_name == 'schedule' && 'always' || 'never' }}
          pull-request-change-detection: 'true'
          target-python-version: ${{ matrix.python }}
          testing-type: sanity
